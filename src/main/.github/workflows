name: Java CI

on:
  push:
    branches:
      - main  # Trigger the pipeline on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Java JDK (Choose the version you want to use)
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # Java 11, adjust as necessary
          distribution: 'adoptopenjdk'  # Can also use 'openjdk' or 'zulu'

      # Step 3: Cache Maven dependencies to speed up builds
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository  # Cache Maven's local repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}  # Cache key based on pom.xml file
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Install dependencies and build the project
      - name: Build with Maven
        run: |
          mvn clean install  # Runs Maven's clean and install phase to fetch dependencies and build the project

      # Step 5: Run tests (optional, but recommended)
      - name: Run tests with Maven
        run: |
          mvn test  # Runs Maven's test phase

      # Step 6: Package the application (optional)
      - name: Package the application
        run: |
          mvn package  # This creates a JAR or WAR file depending on your setup
